①Visualforceの動作説明コード（P25～26）
■Visualforce VFTest
<apex:page controller="VFTest" action="{!init}">
  <apex:form >
  <apex:pageBlock mode="edit" title="VF画面の処理の流れ" >
      <apex:pageBlocksection title="Section">
      <apex:inputText value="{!viewTest}"/>
      </apex:pageBlocksection>
      <hr/>
      <apex:commandButton value="ボタン" action="{!button}"/>
  </apex:pageBlock>
  </apex:form>
</apex:page>

■Apex VFTest
public with sharing class VFTest {
 
    public String viewTest {
        get {
            system.debug('■ゲッター');
            return viewTest;
        }
        set {
            system.debug('■セッター');
            viewTest = 'setter';
        }
    }
    
    public void init(){
        system.debug('■イニット');
    }
 
    public VFTest() {
        system.debug('■コンストラクタ');
        this.viewTest = 'constract';
    }
 
    public void button() {
        system.debug('■メソッド：button');
        this.viewTest = 'button';
    }
}


②Apex言語構造（P.39）
Contact aContact = new Contact(LastName = 'Cole');
insert aContact;
System.debug('Cole\'s ID ' + aContact.Id);


③データ型：sObject（P.40）
sObject anObject =new Account();
Account anAccount = (Account) anObject ;
Position__c  aPos = new Position__c(); 

④データ型：List（P.42）
List<String> eList = new List<String>();
eList.add('test1@force.com');
eList.add('test2@force.com');
eList.add('test3@force.com');
eList.add('test4@force.com');
Integer eListSize;
eListSize = eList.size();
System.debug(eListSize);
System.debug(eList.get(3));  // eList[3]と同じ
eList[3] = 'test3-2@force.com';
System.debug(eList[3]);

⑤データ型：Set（P.44）
Set<Integer> intSet = new Set<Integer>();
intSet.add(47);
intSet.add(42);
intSet.add(101);
Integer intSetSize = intSet.size();
System.debug(intSetSize);
System.debug(intSet.contains(47));
intSet.remove(47);
System.debug(intSet.contains(47));

⑥データ型：Set（P.49）
Map<String, String> keyMap = new Map<String, String>();
keyMap.put('あ', '有難うございました。');
keyMap.put('い', 'いつもお世話になっております。');
keyMap.put('う', '');
keyMap.put('お', 'お疲れ様です。');
System.debug(keyMap.get('あ'));
System.debug(keyMap.containsKey('う'));

⑦データ型：Set（P.52）
Map<String, String> map1 = new Map<String, String>();
map1.put('a','aaaaaaa');
map1.put('b','bbbbbbb');
map1.put('c','ccccccc');

//keySet()メソッド（Mapのキーを返す。）
for(String key : map1.keySet()){
	System.debug( map1.get(key) );
}

//values()メソッド（valueのリストを返す。）
for(String value : map1.values()){
	System.debug( value );
}

//ListをMap生成時に引数に渡す。
//account.IdがキーになるAccountのMapオブジェクトが生成される。
List<Account> accountList = [select id, name from Account];
Map<ID, Account> accountMap = new Map<ID, Account>( accountList );

//keySet()メソッド（Mapのキー(ID)を返す。）
for(String key : accountMap.keySet()){
	System.debug( key );
}

⑧条件文（IFステートメント）（P.53）
Integer x = 50;
String value;
if(x <= 0){
    value = 'このロジックは通らない。';
}else{
    value = 'このロジックを通る。';
}
System.debug(value);

⑨条件文（IFステートメント）（P.54）
String accStr;
if (accStr != null)
{
}

List<Id> ids=new List<Id>();
if (ids.size()>0)
{
}

Contact con = [select Email, Phone from Contact limit 1];
if ( (String.IsBlank(con.Email)) && (String.IsBlank(con.Phone)) )
{
}


⑩条件文（for ループ）（P.56）
for(Integer i = 0; i < 10; i++){
     System.debug(i+1);
}


⑪条件文（for ループ）（P.57）
Integer[] myInts = new Integer[]{1,3,5,7,9};
for(Integer i : myInts){
    System.debug(i);
}

⑫条件文（for ループ）（P.58）
for (Account acc : [SELECT Id,Name FROM Account]) {
    System.debug('★会社名：' + acc.name);
}

⑬例外処理（P.60）
Account account = new Account();
Try{
     update account;
}catch(System.DmlException e)
{
     System.debug('DML exception:' + e.getDmlMessage(0));
}
Finally {
     System.debug('finally passed.');
}

⑭例外処理（P.63）
Void printError(String s, Exception e){
     System.debug('Custom ERR MSG:' + s);
     System.debug('ERR TYPE:' + e.getTypeName());
     System.debug('Custom ERR MSG:' + e.getMessage());
}

Void myDivision(Integer dividend, Integer divisor){
     try{
          System.debug(dividend / divisor);
     }catch (MathException e){
          printError('Math Error', e);
     }catch (NullPointerException e){
          printError('Null divisor or dividend.', e);
     }catch (Exception e){
          printError('Unknown exception ', e);
     }finally {
          System.debug('Exiting myDivision()');
     }
}

myDivision(null, 0);


⑮コメント（P.64）
String test;
// この行のみコメントになります。

/* ここから *
 *
   ここまでがコメントになります。*/

⑮コメント（P.65）
■Visualforce
<apex:page >
<script>
// JavascriptはApexコードど同じコメント記述です。
</script>

<!-- ここから

       ここまでがコメントになります。-->
</apex:page>






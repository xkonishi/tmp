①画面遷移例（P232）
■Apex　EditFromSearchController
public with sharing class EditFromSearchController 
{
    // the accounts to be edited
    public List<Account> accs {get; set;}

    // constructor - extracts account* parameters from the URL and
    // retrieves the associated account records
    public EditFromSearchController()
    {
        List<Id> ids=new List<Id>();
        Integer idx=1;
        String accStr;

        do
        {
            accStr=ApexPages.currentPage().getParameters().get('account' + idx);
            if (accStr!=null)
            {
                ids.add(accStr);
            }
            idx++;
        }
        while (null!=accStr);

        if (ids.size()>0)
        {
            accs=[select id, Name, Industry, Type from Account where id in :ids];
        }
    }

    // saves the account records and redirects to the accounts tab
    public PageReference save()
    {
        update accs;   

        PageReference showPage = Page.ShowFromSearch;
        showPage.setRedirect(true);
        Integer i = 1;
        for(Account acc : accs)
        {
            showPage.getParameters().put('account'+ i,account.id);
            i++; 
        }
        return showPage;
    }
}

■Visualforce　EditFromSearch
<apex:page controller="EditFromSearchController">
  <apex:form >
     <apex:pageBlock >
        <apex:pageBlockTable value="{!accs}" var="acc">
          <apex:column headerValue="Name">
            <apex:inputField value="{!acc.Name}"/>
          </apex:column>
          <apex:column headerValue="Industry">
            <apex:inputField value="{!acc.Industry}"/>
          </apex:column>
          <apex:column headerValue="Type">
            <apex:inputField value="{!acc.Type}"/>
          </apex:column>
        </apex:pageBlockTable>
        <apex:commandButton value="Save" action="{!save}" />
     </apex:pageBlock>
  </apex:form>
</apex:page>

■Apex　ShowFromSearchController
public with sharing class ShowFromSearchController 
{
    // the accounts to be edited
    public List<Account> accs {get; set;}

    // constructor - extracts account* parameters from the URL and
    // retrieves the associated account records
    public ShowFromSearchController()
    {
        List<Id> ids=new List<Id>();
        Integer idx=1;
        String accStr;

        do
        {
            accStr=ApexPages.currentPage().getParameters().get('account' + idx);
            if (accStr!=null)
            {
                ids.add(accStr);
            }
            idx++;
        }
        while (null!=accStr);

        if (ids.size()>0)
        {
            accs=[select id, Name, Industry, Type from Account where id in :ids];
        }
    }

    // saves the account records and redirects to the accounts tab
    public PageReference back()
    {
        PageReference editPage = Page.EditFromSearch;
        editPage.setRedirect(true);
        Integer i = 1;
        for(Account acc : accs)
        {
            editPage.getParameters().put('account'+ i,acc.id);
            i++; 
        }
        return editPage;
    }
}

■Visualforce　ShowFromSearch
<apex:page controller="ShowFromSearchController">
  <apex:form >
     <apex:pageBlock >
        <apex:pageBlockTable value="{!accs}" var="acc">
          <apex:column headerValue="Name">
            <apex:outputField value="{!acc.Name}"/>
          </apex:column>
          <apex:column headerValue="Industry">
            <apex:outputField value="{!acc.Industry}"/>
          </apex:column>
          <apex:column headerValue="Type">
            <apex:outputField value="{!acc.Type}"/>
          </apex:column>
        </apex:pageBlockTable>
        <apex:commandButton value="back" action="{!back}" />
     </apex:pageBlock>
  </apex:form>
</apex:page>


②AJAX Toolkit（P235）
{!REQUIRESCRIPT("/soap/ajax/11.1/connection.js")} 

var records = {!GETRECORDIDS( Case.Id )}; 

if( records[0] == null){ 
alert("1つ以上選択してください"); 
}else{ 
sforce.connection.deleteIds(records); 
window.location.reload(); 
}


③★Stylesheet紹介用サンプル
■Apex　RetrieveContactController
public with sharing class RetrieveContactController 
{
    // The user input email
    public String emailStr {get; set;}
    
    // Indicator that a search has been run and a contact found
    public Boolean contactFound {get; set;}
    
    // The matching contact
    public Contact cont {get; set;}
    
    // Constructor
    public RetrieveContactController()
    {
        contactFound=false;
    }
    
    // Action method to execute the search
    public void lookup()
    {
        List<Contact> conts=[select FirstName, LastName, Email from Contact where email=:emailStr];
        if (conts.size()>0)
        {
            contactFound=true;
            cont=conts[0];
        }
        else
        {
            contactFound=false;
        }
    }
}

■Visualforce　RetrieveContact
<apex:page applyHtmlTag="false" applyBodyTag="false" controller="RetrieveContactController" sidebar="false" showHeader="false" standardStyleSheets="false">
<html>
    <head>
      <title>Force.com Sites Recipe 2</title>
      <meta name="viewport" content="width=device-width, initial-scale=1.0"></meta>
      <!-- Bootstrap -->
      <apex:stylesheet value="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css"/>
      <apex:includescript value="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js" />
      <apex:includeScript value="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/js/bootstrap.min.js"/>
    </head>
    <body>
       <!--  container -->
       <div class="container-fluid">
         <div class="hero-unit">
           <h1>Contact Search</h1>
           <h2>Visualforce Development Cookbook</h2>
           <p></p>
         </div>
       
         <apex:form styleClass="form-horizontal">
           <div class="well">
             <fieldset>
               <legend>Enter the email address</legend>
             </fieldset>
           <div class="control-group">
             <apex:outputLabel styleClass="control-label" for="email" value="Email" />
             <div class="controls">
               <div class="input-prepend">
                 <span class="add-on"><i class="icon-envelope"></i></span>
                 <apex:inputText id="email" value="{!emailStr}" />
               </div>
             </div>
           </div>
           <div class="control-group">
             <label class="control-label"></label>
             <div class="controls">
               <apex:commandButton value="Lookup" action="{!lookup}" styleclass="btn btn-success" rerender="results"/>
             </div>
           </div>
             <fieldset>
               <legend>Results</legend>
             </fieldset>
       <apex:outputPanel layout="block" id="results">
         <apex:outputPanel layout="block" rendered="{!contactFound}">
           <dl class="dl-horizontal">
             <dt>First Name</dt>
             <dd><apex:outputField value="{!cont.FirstName}"/></dd>
             <dt>Last Name</dt>
             <dd><apex:outputField value="{!cont.LastName}"/></dd>
             <dt>Email</dt>
             <dd><apex:outputField value="{!cont.Email}"/></dd>
           </dl>
         </apex:outputPanel>
       
         <apex:outputPanel layout="block" rendered="{!NOT(contactFound)}">
             No contacts found matching that email address.
         </apex:outputPanel>
       </apex:outputPanel>
       
           </div>
         </apex:form>       
       </div> <!-- container -->
       
       <div style="background-color:#EEEEEE; margin-top:20px;">
       <!--  container -->
       <div class="container-fluid">
       <div class="row-fluid" >
         <div class="span2">
         </div>
         <div class="span8">
           <table class="table table-condensed">
             <tr>
               <td>
                 <b>Bootstrap</b>
               </td>
               <td>
                 Built using the bootstrap framework.
               </td>
             </tr>
             <tr>
               <td>
                 <b>Responsive</b>
               </td>
               <td>
                 Resize the browser window and see what happens
               </td>
             </tr>
           </table>
         </div><!-- .span8 -->
         <div class="span2">
         </div>
       </div> <!-- row -->
      </div> <!-- container -->
      </div>
       
       <div class="container-fluid">
         <div class="row-fluid">
           <div class="span12" style="text-align: center">
             <p style="font-size:0.7em"><span style="font-style: italic">Salesforce, salesforce.com, Sales Cloud, Service Cloud, Collaboration Cloud, Custom Cloud, Force.com and Chatter are trademarks of salesforce.com, inc.</span></p>
           </div>
         </div>
       </div>       

    </body>
  </html>
</apex:page>
